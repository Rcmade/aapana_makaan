
// Do not change anything here. 
// This file is generated by the 'bun gen-types' command in the backend folder.

import { ZodParsedType } from "zod";

export type SignatureResponseT = { timestamp: string; upload_preset: string; source: string; signature: string; };


export type SignatureRequestT = {};


export type UpsertUserResponseT = { isNewUser: boolean; id: string; name: string; role: "ADMIN" | "USER" | "SELLER"; email: string; phone: string | null; image: string | null; createdAt: string; updatedAt: string; };


export type UpsertUserRequestT = { name: string; email: string; image?: string | undefined; };


export type UserBasicInfoResponseT = { propertyCount: number; } | null;


export type UserDetailedInfoResponseT = { id: string; name: string; role: "ADMIN" | "USER" | "SELLER"; email: string; phone: string | null; image: string | null; createdAt: string; propertyCount: number; } | null;


export type UserPropertyResponseT = { id: string; propertyFor: "Sell" | "Rent" | null; price: string; completeAddress: string; length: number; width: number; primaryImage: string; }[] | null;


export type AddPropertyResponseT = { message: string; data: { id: string; }; };


export type PropertyDetailsResponseT = { location: { lat: number; lng: number; }; images: string[]; id: string; phone: string; name: string; streetNumber: string | null; street: string | null; state: string | null; city: string | null; postalCode: string | null; country: string | null; completeAddress: string; primaryImage: string; detailedPropertyType: "Plot" | "Flat" | "House"; bhk: "1 BHK" | "2 BHK" | "3 BHK" | "3+ BHK" | null; propertyFor: "Sell" | "Rent" | null; length: number; width: number; createdAt: string; updatedAt: string; price: string; } | null;


export type AddPropertyRequestT = { length: number; name: string; phone: string; completeAddress: string; primaryImage: string; detailedPropertyType: "Plot" | "Flat" | "House"; width: number; price: number; lat: number; lng: number; images: string[]; id?: string | undefined; streetNumber?: string | null | undefined; street?: string | null | undefined; state?: string | null | undefined; city?: string | null | undefined; postalCode?: string | null | undefined; country?: string | null | undefined; bhk?: "1 BHK" | "2 BHK" | "3 BHK" | "3+ BHK" | null | undefined; propertyFor?: "Sell" | "Rent" | null | undefined; };


export type PropertyTypeE = "Plot" | "Flat" | "House";


export type BhkTypeE = "1 BHK" | "2 BHK" | "3 BHK" | "3+ BHK" | null | undefined;


export type SearchPropertyResponseT = { properties: { id: string; completeAddress: string; price: string; primaryImage: string; location: { x: number; y: number; }; verified: boolean; createdAt: string; propertyFor: "Sell" | "Rent" | null; sqFt: never; }[]; pagination: { total: number; limit: number; page: number; }; };


export type TopOfferPropertyResponseT = { properties: { id: string; completeAddress: string; price: string; primaryImage: string; location: { x: number; y: number; }; verified: boolean; createdAt: string; propertyFor: "Sell" | "Rent" | null; sqFt: never; }[]; };


export type GetPropertyResponseT = { images: ({ url: string; } | null)[]; user: { id: string; name: string; email: string; phone: string | null; image: string | null; } | null; length: number; id: string; name: string; phone: string; createdAt: string; updatedAt: string; location: { x: number; y: number; }; userId: string | null; streetNumber: string | null; street: string | null; state: string | null; city: string | null; postalCode: string | null; country: string | null; completeAddress: string; primaryImage: string; detailedPropertyType: "Plot" | "Flat" | "House"; bhk: "1 BHK" | "2 BHK" | "3 BHK" | "3+ BHK" | null; propertyFor: "Sell" | "Rent" | null; width: number; verified: boolean; price: string; contentSearch: string | null; };


export type SearchPropertyRequestParamsT = { limit?: number; page?: number; search?: string; priceFilter?: number; sortBy?: keyof typeof import("/home/developer/Music/preparing/aapana_makaan/backend/src/db/schema/properties").properties; category?: string; userId?: string; lat?: number; lng?: number; };


export type DeleteMediaResponseT = { message: string; };


export type DeleteMediaRequestT = { propertyId?: string | undefined; mediaUrlOrId: string; };


export type ScheduleTourResponseT = { message: string; data: { date: string; id: string; name: string; email: string; phone: string; createdAt: string; type: "In_Person" | "Video_Chat"; propertyId: string; time: string; }; type: string; } | { message: string; data: null; };


export type ScheduleTourRequestT = { date: Date; name: string; email: string; phone: string; type: "In_Person" | "Video_Chat"; propertyId: string; time: string; id?: string | undefined; createdAt?: Date | undefined; };


export type InquiryMessageResponseT = { message: string; data: { id: string; name: string; email: string; phone: string; createdAt: string; propertyId: string; message: string; }; type: string; } | { message: string; data: null; };


export type InquiryMessageRequestT = { name: string; email: string; phone: string; propertyId: string; message: string; id?: string | undefined; createdAt?: Date | undefined; };


